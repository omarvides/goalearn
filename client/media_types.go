// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/omarvides/goalearn/design
// --out=$(GOPATH)/src/github.com/omarvides/goalearn
// --version=v1.1.0-dirty
//
// API "user": Application Media Types
//
// The content of this file is auto-generated, DO NOT MODIFY

package client

import (
	"github.com/goadesign/goa"
	"net/http"
)

// A user (default view)
//
// Identifier: application/user.api+json; view=default
type UserAPI struct {
	// Age of the user
	Age int `form:"age" json:"age" xml:"age"`
	// Unique user ID
	ID int `form:"id" json:"id" xml:"id"`
	// The name of the user
	Name string `form:"name" json:"name" xml:"name"`
}

// Validate validates the UserAPI media type instance.
func (mt *UserAPI) Validate() (err error) {

	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	return
}

// DecodeUserAPI decodes the UserAPI instance encoded in resp body.
func (c *Client) DecodeUserAPI(resp *http.Response) (*UserAPI, error) {
	var decoded UserAPI
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}
